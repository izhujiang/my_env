# profile for login shell, source by .bash_profile and linked by .zprofile
# set variables or init environment when login
# profiles mainly are used to load environment variables.

# echo "loading .x_profile"
# export TEST_COMMONPROFILE=".x_profile loaded"
#
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
unset LC_CTYPE
export SSH_KEY_PATH=${HOME}/.ssh/rsa_id

# silence warning, If invoke the bash shell while macOS Catalina is configured to use a different shell.
export BASH_SILENCE_DEPRECATION_WARNING=1

export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar"
export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
export MANPATH="${HOMEBREW_PREFIX}/share/man:${MANPATH}"
export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH}"
export PATH="${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:${PATH}"
export PATH="${HOMEBREW_PREFIX}/opt/openssl@1.1/bin:${PATH}"
export XML_CATALOG_FILES="${HOMEBREW_PREFIX}/etc/xml/catalog"
# opt out of Homebrewâ€™s analytics
export HOMEBREW_NO_ANALYTICS=1

# for linux, to ensure the TERM variable is only set outside of tmux, since tmux sets its own terminal.
[ -z "$TMUX" ] && export TERM=xterm-256color

# addtional path
# ${HOME}/.local/bin for store local commands, programs and scripts, which maybe run in vim/nvim via "[!!/!}/!G]cmd"
# export PATH=${HOME}/.local/bin:${PATH}

export EDITOR=vi
export VISUAL=vi

# fzf
# follow symbolic links, and include hidden files
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
# export FZF_DEFAULT_COMMAND='fd --type f'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# export FZF_ALT_C_COMMAND="fd -t d . $HOME"

#
# Options to fzf command
# export FZF_DEFAULT_OPTS='--height 60% --layout=reverse --border'
export FZF_DEFAULT_OPTS=`echo --multi --height 60% --layout=reverse --border --history=\"${HOME}/.local/share/.fzf-history\" --history-size=1000 --bind=ctrl-n:down,ctrl-j:down,ctrl-p:up,ctrl-k:up,ctrl-h:first,ctrl-l:last,down:next-history,up:previous-history`
#
# Use ~~ as the trigger sequence instead of the default **
# export FZF_COMPLETION_TRIGGER='~~'
export FZF_COMPLETION_OPTS='--border --info=inline'
#
export FZF_TMUX_OPTS='-d 40%'

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
#
# (EXPERIMENTAL) Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}

_fzf_complete_foo() {
  _fzf_complete --multi --reverse --header-lines=3 -- "$@" < <(
    ls -la
  )
}
_fzf_complete_foo_post() {
  awk '{print $NF}'
}

[ -n "$BASH" ] && complete -F _fzf_complete_foo -o default -o bashdefault foo

# 3. ide-level env and tools
# golang
export GOPATH=${HOME}/workspace/go
export GO111MODULE=on
export PATH=${GOPATH}/bin:${PATH}
# rust
export PATH="${HOME}/.cargo/bin:${PATH}"

# python
export PYENV_ROOT="$HOME/.pyenv
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# found static Python library (/Users/hurricane/.pyenv/versions/3.9.2/lib/python3.9/config-3.9-darwin/libpython3.9.a)
# but a dynamic one is required. You must use a Python compiled with the --enable-framework flag. If using pyenv, you need to run the command:
# export PYTHON_CONFIGURE_OPTS="--enable-framework"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# global npm package
export PATH="${HOME}/.local/bin:${PATH}"

export PATH="${HOME}/.deno/bin:${PATH}"
export PATH="${HOME}/.docker/bin:${PATH}"